"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus integrations-api
 * Api principal do sistema Pegasus para integração com outros sistemas.
 *
 * The version of the OpenAPI document: 1.2.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfExceptionResponseEntity = instanceOfExceptionResponseEntity;
exports.ExceptionResponseEntityFromJSON = ExceptionResponseEntityFromJSON;
exports.ExceptionResponseEntityFromJSONTyped = ExceptionResponseEntityFromJSONTyped;
exports.ExceptionResponseEntityToJSON = ExceptionResponseEntityToJSON;
exports.ExceptionResponseEntityToJSONTyped = ExceptionResponseEntityToJSONTyped;
var ExceptionResponseEntityErrorsInner_1 = require("./ExceptionResponseEntityErrorsInner");
/**
 * Check if a given object implements the ExceptionResponseEntity interface.
 */
function instanceOfExceptionResponseEntity(value) {
    if (!('statusCode' in value) || value['statusCode'] === undefined)
        return false;
    if (!('message' in value) || value['message'] === undefined)
        return false;
    if (!('errors' in value) || value['errors'] === undefined)
        return false;
    return true;
}
function ExceptionResponseEntityFromJSON(json) {
    return ExceptionResponseEntityFromJSONTyped(json, false);
}
function ExceptionResponseEntityFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'statusCode': json['statusCode'],
        'message': json['message'],
        'errors': (json['errors'].map(ExceptionResponseEntityErrorsInner_1.ExceptionResponseEntityErrorsInnerFromJSON)),
    };
}
function ExceptionResponseEntityToJSON(json) {
    return ExceptionResponseEntityToJSONTyped(json, false);
}
function ExceptionResponseEntityToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'statusCode': value['statusCode'],
        'message': value['message'],
        'errors': (value['errors'].map(ExceptionResponseEntityErrorsInner_1.ExceptionResponseEntityErrorsInnerToJSON)),
    };
}
