/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus integrations-api
 * Api principal do sistema Pegasus para integração com outros sistemas.
 *
 * The version of the OpenAPI document: 1.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface IntegrationPreviewEntity
 */
export interface IntegrationPreviewEntity {
    /**
     * Unique identifier for the integration
     * @type {string}
     * @memberof IntegrationPreviewEntity
     */
    id: string;
    /**
     * Title of the integration
     * @type {string}
     * @memberof IntegrationPreviewEntity
     */
    title: string;
    /**
     * Subtitle of the integration
     * @type {string}
     * @memberof IntegrationPreviewEntity
     */
    subtitle: string;
    /**
     * Brief description of what the integration does
     * @type {string}
     * @memberof IntegrationPreviewEntity
     */
    description: string;
    /**
     * Copy text. Used to copy phone, email etc.
     * @type {string}
     * @memberof IntegrationPreviewEntity
     */
    copy?: string | null;
    /**
     * Content of the integration. Show on details. In HTML format. Use markdown for formatting.
     * @type {string}
     * @memberof IntegrationPreviewEntity
     */
    content?: string | null;
    /**
     * Name of the integration icon. Lucide react.
     * @type {string}
     * @memberof IntegrationPreviewEntity
     */
    iconName: string;
    /**
     * Availability status of the integration
     * @type {string}
     * @memberof IntegrationPreviewEntity
     */
    availability: IntegrationPreviewEntityAvailabilityEnum;
}


/**
 * @export
 */
export const IntegrationPreviewEntityAvailabilityEnum = {
    Available: 'AVAILABLE',
    Soon: 'SOON'
} as const;
export type IntegrationPreviewEntityAvailabilityEnum = typeof IntegrationPreviewEntityAvailabilityEnum[keyof typeof IntegrationPreviewEntityAvailabilityEnum];


/**
 * Check if a given object implements the IntegrationPreviewEntity interface.
 */
export function instanceOfIntegrationPreviewEntity(value: object): value is IntegrationPreviewEntity {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('subtitle' in value) || value['subtitle'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('iconName' in value) || value['iconName'] === undefined) return false;
    if (!('availability' in value) || value['availability'] === undefined) return false;
    return true;
}

export function IntegrationPreviewEntityFromJSON(json: any): IntegrationPreviewEntity {
    return IntegrationPreviewEntityFromJSONTyped(json, false);
}

export function IntegrationPreviewEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): IntegrationPreviewEntity {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'title': json['title'],
        'subtitle': json['subtitle'],
        'description': json['description'],
        'copy': json['copy'] == null ? undefined : json['copy'],
        'content': json['content'] == null ? undefined : json['content'],
        'iconName': json['iconName'],
        'availability': json['availability'],
    };
}

export function IntegrationPreviewEntityToJSON(json: any): IntegrationPreviewEntity {
    return IntegrationPreviewEntityToJSONTyped(json, false);
}

export function IntegrationPreviewEntityToJSONTyped(value?: IntegrationPreviewEntity | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'title': value['title'],
        'subtitle': value['subtitle'],
        'description': value['description'],
        'copy': value['copy'],
        'content': value['content'],
        'iconName': value['iconName'],
        'availability': value['availability'],
    };
}

