/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus integrations-api
 * Api principal do sistema Pegasus para integração com outros sistemas.
 *
 * The version of the OpenAPI document: 1.3.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ForwardedEmailEntityEnvelope } from './ForwardedEmailEntityEnvelope';
import {
    ForwardedEmailEntityEnvelopeFromJSON,
    ForwardedEmailEntityEnvelopeFromJSONTyped,
    ForwardedEmailEntityEnvelopeToJSON,
    ForwardedEmailEntityEnvelopeToJSONTyped,
} from './ForwardedEmailEntityEnvelope';
import type { ForwardedEmailEntityCharsets } from './ForwardedEmailEntityCharsets';
import {
    ForwardedEmailEntityCharsetsFromJSON,
    ForwardedEmailEntityCharsetsFromJSONTyped,
    ForwardedEmailEntityCharsetsToJSON,
    ForwardedEmailEntityCharsetsToJSONTyped,
} from './ForwardedEmailEntityCharsets';
import type { ForwardedEmailEntityPopulatedAttachmentsInner } from './ForwardedEmailEntityPopulatedAttachmentsInner';
import {
    ForwardedEmailEntityPopulatedAttachmentsInnerFromJSON,
    ForwardedEmailEntityPopulatedAttachmentsInnerFromJSONTyped,
    ForwardedEmailEntityPopulatedAttachmentsInnerToJSON,
    ForwardedEmailEntityPopulatedAttachmentsInnerToJSONTyped,
} from './ForwardedEmailEntityPopulatedAttachmentsInner';

/**
 * 
 * @export
 * @interface ForwardedEmailEntity
 */
export interface ForwardedEmailEntity {
    /**
     * 
     * @type {string}
     * @memberof ForwardedEmailEntity
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof ForwardedEmailEntity
     */
    ownerOrganization: string;
    /**
     * 
     * @type {string}
     * @memberof ForwardedEmailEntity
     */
    to: string;
    /**
     * 
     * @type {string}
     * @memberof ForwardedEmailEntity
     */
    from: string;
    /**
     * 
     * @type {string}
     * @memberof ForwardedEmailEntity
     */
    subject: string;
    /**
     * 
     * @type {string}
     * @memberof ForwardedEmailEntity
     */
    emailContent: string;
    /**
     * 
     * @type {ForwardedEmailEntityCharsets}
     * @memberof ForwardedEmailEntity
     */
    charsets?: ForwardedEmailEntityCharsets;
    /**
     * 
     * @type {ForwardedEmailEntityEnvelope}
     * @memberof ForwardedEmailEntity
     */
    envelope?: ForwardedEmailEntityEnvelope;
    /**
     * 
     * @type {Array<string>}
     * @memberof ForwardedEmailEntity
     */
    attachments?: Array<string>;
    /**
     * 
     * @type {Array<ForwardedEmailEntityPopulatedAttachmentsInner>}
     * @memberof ForwardedEmailEntity
     */
    populatedAttachments?: Array<ForwardedEmailEntityPopulatedAttachmentsInner>;
    /**
     * 
     * @type {any}
     * @memberof ForwardedEmailEntity
     */
    createdAt: any | null;
    /**
     * 
     * @type {any}
     * @memberof ForwardedEmailEntity
     */
    updatedAt: any | null;
}

/**
 * Check if a given object implements the ForwardedEmailEntity interface.
 */
export function instanceOfForwardedEmailEntity(value: object): value is ForwardedEmailEntity {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('ownerOrganization' in value) || value['ownerOrganization'] === undefined) return false;
    if (!('to' in value) || value['to'] === undefined) return false;
    if (!('from' in value) || value['from'] === undefined) return false;
    if (!('subject' in value) || value['subject'] === undefined) return false;
    if (!('emailContent' in value) || value['emailContent'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function ForwardedEmailEntityFromJSON(json: any): ForwardedEmailEntity {
    return ForwardedEmailEntityFromJSONTyped(json, false);
}

export function ForwardedEmailEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): ForwardedEmailEntity {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'ownerOrganization': json['ownerOrganization'],
        'to': json['to'],
        'from': json['from'],
        'subject': json['subject'],
        'emailContent': json['emailContent'],
        'charsets': json['charsets'] == null ? undefined : ForwardedEmailEntityCharsetsFromJSON(json['charsets']),
        'envelope': json['envelope'] == null ? undefined : ForwardedEmailEntityEnvelopeFromJSON(json['envelope']),
        'attachments': json['attachments'] == null ? undefined : json['attachments'],
        'populatedAttachments': json['populatedAttachments'] == null ? undefined : ((json['populatedAttachments'] as Array<any>).map(ForwardedEmailEntityPopulatedAttachmentsInnerFromJSON)),
        'createdAt': json['createdAt'],
        'updatedAt': json['updatedAt'],
    };
}

export function ForwardedEmailEntityToJSON(json: any): ForwardedEmailEntity {
    return ForwardedEmailEntityToJSONTyped(json, false);
}

export function ForwardedEmailEntityToJSONTyped(value?: ForwardedEmailEntity | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'ownerOrganization': value['ownerOrganization'],
        'to': value['to'],
        'from': value['from'],
        'subject': value['subject'],
        'emailContent': value['emailContent'],
        'charsets': ForwardedEmailEntityCharsetsToJSON(value['charsets']),
        'envelope': ForwardedEmailEntityEnvelopeToJSON(value['envelope']),
        'attachments': value['attachments'],
        'populatedAttachments': value['populatedAttachments'] == null ? undefined : ((value['populatedAttachments'] as Array<any>).map(ForwardedEmailEntityPopulatedAttachmentsInnerToJSON)),
        'createdAt': value['createdAt'],
        'updatedAt': value['updatedAt'],
    };
}

