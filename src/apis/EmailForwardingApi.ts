/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus integrations-api
 * Api principal do sistema Pegasus para integração com outros sistemas.
 *
 * The version of the OpenAPI document: 1.6.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ExceptionResponseEntity,
  ForwardedEmailEntity,
  ProcessEmailForForwardingIntegrationRequestBodyDto,
} from '../models/index';
import {
    ExceptionResponseEntityFromJSON,
    ExceptionResponseEntityToJSON,
    ForwardedEmailEntityFromJSON,
    ForwardedEmailEntityToJSON,
    ProcessEmailForForwardingIntegrationRequestBodyDtoFromJSON,
    ProcessEmailForForwardingIntegrationRequestBodyDtoToJSON,
} from '../models/index';

export interface ProcessEmailRequest {
    processEmailForForwardingIntegrationRequestBodyDto: ProcessEmailForForwardingIntegrationRequestBodyDto;
}

/**
 * EmailForwardingApi - interface
 * 
 * @export
 * @interface EmailForwardingApiInterface
 */
export interface EmailForwardingApiInterface {
    /**
     * Receives email forwarding webhooks from email parsing service and processes them to create forwarded email records
     * @summary Email forwarding webhook endpoint
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EmailForwardingApiInterface
     */
    emailForwardingWebhookRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ForwardedEmailEntity>>;

    /**
     * Receives email forwarding webhooks from email parsing service and processes them to create forwarded email records
     * Email forwarding webhook endpoint
     */
    emailForwardingWebhook(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ForwardedEmailEntity>;

    /**
     * 
     * @summary Process email for forwarding integration
     * @param {ProcessEmailForForwardingIntegrationRequestBodyDto} processEmailForForwardingIntegrationRequestBodyDto 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EmailForwardingApiInterface
     */
    processEmailRaw(requestParameters: ProcessEmailRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * Process email for forwarding integration
     */
    processEmail(requestParameters: ProcessEmailRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

}

/**
 * 
 */
export class EmailForwardingApi extends runtime.BaseAPI implements EmailForwardingApiInterface {

    /**
     * Receives email forwarding webhooks from email parsing service and processes them to create forwarded email records
     * Email forwarding webhook endpoint
     */
    async emailForwardingWebhookRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ForwardedEmailEntity>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/external/email-forwarding/webhook`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ForwardedEmailEntityFromJSON(jsonValue));
    }

    /**
     * Receives email forwarding webhooks from email parsing service and processes them to create forwarded email records
     * Email forwarding webhook endpoint
     */
    async emailForwardingWebhook(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ForwardedEmailEntity> {
        const response = await this.emailForwardingWebhookRaw(initOverrides);
        return await response.value();
    }

    /**
     * Process email for forwarding integration
     */
    async processEmailRaw(requestParameters: ProcessEmailRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['processEmailForForwardingIntegrationRequestBodyDto'] == null) {
            throw new runtime.RequiredError(
                'processEmailForForwardingIntegrationRequestBodyDto',
                'Required parameter "processEmailForForwardingIntegrationRequestBodyDto" was null or undefined when calling processEmail().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/internal/queues/process-email-for-forwarding-integration`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ProcessEmailForForwardingIntegrationRequestBodyDtoToJSON(requestParameters['processEmailForForwardingIntegrationRequestBodyDto']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Process email for forwarding integration
     */
    async processEmail(requestParameters: ProcessEmailRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.processEmailRaw(requestParameters, initOverrides);
    }

}
