/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus integrations-api
 * Api principal do sistema Pegasus para integração com outros sistemas.
 *
 * The version of the OpenAPI document: 1.2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CreateConnectTokenRequestBodyDto,
  CreateConnectTokenResponseBodyDto,
  ExceptionResponseEntity,
  PluggyWebhookRequestBodyDto,
} from '../models/index';
import {
    CreateConnectTokenRequestBodyDtoFromJSON,
    CreateConnectTokenRequestBodyDtoToJSON,
    CreateConnectTokenResponseBodyDtoFromJSON,
    CreateConnectTokenResponseBodyDtoToJSON,
    ExceptionResponseEntityFromJSON,
    ExceptionResponseEntityToJSON,
    PluggyWebhookRequestBodyDtoFromJSON,
    PluggyWebhookRequestBodyDtoToJSON,
} from '../models/index';

export interface CreateConnectTokenRequest {
    createConnectTokenRequestBodyDto: CreateConnectTokenRequestBodyDto;
}

export interface PluggyWebhookRequest {
    pluggyWebhookRequestBodyDto: PluggyWebhookRequestBodyDto;
}

/**
 * PluggyApi - interface
 * 
 * @export
 * @interface PluggyApiInterface
 */
export interface PluggyApiInterface {
    /**
     * 
     * @summary Create a connect token
     * @param {CreateConnectTokenRequestBodyDto} createConnectTokenRequestBodyDto 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PluggyApiInterface
     */
    createConnectTokenRaw(requestParameters: CreateConnectTokenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CreateConnectTokenResponseBodyDto>>;

    /**
     * Create a connect token
     */
    createConnectToken(requestParameters: CreateConnectTokenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CreateConnectTokenResponseBodyDto>;

    /**
     * 
     * @summary Pluggy webhook endpoint to receive event notifications
     * @param {PluggyWebhookRequestBodyDto} pluggyWebhookRequestBodyDto 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PluggyApiInterface
     */
    pluggyWebhookRaw(requestParameters: PluggyWebhookRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * Pluggy webhook endpoint to receive event notifications
     */
    pluggyWebhook(requestParameters: PluggyWebhookRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

}

/**
 * 
 */
export class PluggyApi extends runtime.BaseAPI implements PluggyApiInterface {

    /**
     * Create a connect token
     */
    async createConnectTokenRaw(requestParameters: CreateConnectTokenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CreateConnectTokenResponseBodyDto>> {
        if (requestParameters['createConnectTokenRequestBodyDto'] == null) {
            throw new runtime.RequiredError(
                'createConnectTokenRequestBodyDto',
                'Required parameter "createConnectTokenRequestBodyDto" was null or undefined when calling createConnectToken().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/external/open-finance/pluggy/connect-token`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateConnectTokenRequestBodyDtoToJSON(requestParameters['createConnectTokenRequestBodyDto']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CreateConnectTokenResponseBodyDtoFromJSON(jsonValue));
    }

    /**
     * Create a connect token
     */
    async createConnectToken(requestParameters: CreateConnectTokenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CreateConnectTokenResponseBodyDto> {
        const response = await this.createConnectTokenRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Pluggy webhook endpoint to receive event notifications
     */
    async pluggyWebhookRaw(requestParameters: PluggyWebhookRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['pluggyWebhookRequestBodyDto'] == null) {
            throw new runtime.RequiredError(
                'pluggyWebhookRequestBodyDto',
                'Required parameter "pluggyWebhookRequestBodyDto" was null or undefined when calling pluggyWebhook().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/external/open-finance/pluggy/webhook`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: PluggyWebhookRequestBodyDtoToJSON(requestParameters['pluggyWebhookRequestBodyDto']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Pluggy webhook endpoint to receive event notifications
     */
    async pluggyWebhook(requestParameters: PluggyWebhookRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.pluggyWebhookRaw(requestParameters, initOverrides);
    }

}
